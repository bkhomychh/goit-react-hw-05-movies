{"version":3,"file":"static/js/417.64807a12.chunk.js","mappings":"4PAEaA,EAAUC,EAAAA,GAAAA,IAAH,4FAKPC,EAAaD,EAAAA,GAAAA,GAAH,mFAMVE,EAAOF,EAAAA,GAAAA,GAAH,6O,SCmCjB,EAzCa,WACX,OAAwBG,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GACbI,MAAK,SAAAC,GAAG,OAAIN,EAAQM,EAAZ,IACRC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,GACb,GAAE,CAACP,IAECF,GAKH,SAACL,EAAD,UACGK,EAAKY,OAAS,GACb,SAACf,EAAD,UACGG,EAAKa,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAC1BC,EAASD,EACXE,EAAAA,GAAiBF,EACjB,wEAEJ,OACE,UAACnB,EAAD,YACE,gBAAKsB,IAAKF,EAAQG,IAAKN,KACvB,wBAAKA,KACL,0BACE,yCADF,IAC2BC,OAJlBF,EAQd,OAGH,uEAxBG,qCA4BV,C,+HC9CD,IAAMQ,EAAW,+BACXH,EAAiB,kCAEjBI,EAAU,mCAEVC,EAAW,CACfC,SAAU,uBACVC,OAAQ,gBACRC,aAAc,U,6KCJhBC,EAAAA,EAAAA,SAAAA,QAAyBN,EAAAA,GACzBM,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAASN,EAAAA,IAGJ,IAAMO,EAAoB,WAC/B,OAAOF,EAAAA,EAAAA,IAAUJ,EAAAA,GAAAA,UAAmBlB,MAAK,SAAAC,GAAG,OAAIA,EAAIwB,KAAKC,OAAb,GAC7C,EAEYC,EAAyB,SAAAC,GACpC,IAAMC,EAAU,CACdC,OAAQ,CACNC,MAAOH,IAIX,OAAON,EAAAA,EAAAA,IAAUJ,EAAAA,GAAAA,OAAiBW,GAAS7B,MAAK,SAAAC,GAAG,OAAIA,EAAIwB,KAAKC,OAAb,GACpD,EAEYM,EAAkB,SAAAxB,GAC7B,OAAOc,EAAAA,EAAAA,IAAUJ,EAAAA,GAAAA,aAAwBV,GAAIR,MAAK,SAAAC,GAAG,OAAIA,EAAIwB,IAAR,GACtD,EAEY1B,EAAkB,SAAAS,GAC7B,OAAOc,EAAAA,EAAAA,IACAJ,EAAAA,GAAAA,aAAwBV,EAAK,YACjCR,MAAK,SAAAC,GAAG,OAAIA,EAAIwB,KAAK/B,IAAb,GACZ,EAEYuC,EAAkB,SAAAzB,GAC7B,OAAOc,EAAAA,EAAAA,IACAJ,EAAAA,GAAAA,aAAwBV,EAAK,YACjCR,MAAK,SAAAC,GAAG,OAAIA,EAAIwB,KAAKC,OAAb,GACZ,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","constants/api.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 30px 50px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.5);\n`;\n\nexport const StyledCast = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n`;\n\nexport const Item = styled.li`\n  padding: 20px 30px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.5);\n\n  img {\n    margin-bottom: 10px;\n    max-width: 150px;\n  }\n\n  h2 {\n    margin-bottom: 5px;\n  }\n\n  span {\n    font-weight: 500;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieCredits } from 'services/api';\nimport { IMAGE_BASE_URL } from 'constants/api';\nimport { Item, StyledCast, Wrapper } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCredits(movieId)\n      .then(res => setCast(res))\n      .catch(err => console.log(err));\n  }, [movieId]);\n\n  if (!cast) {\n    return <p>Loading...</p>;\n  }\n\n  return (\n    <Wrapper>\n      {cast.length > 0 ? (\n        <StyledCast>\n          {cast.map(({ id, name, character, profile_path }) => {\n            const imgUrl = profile_path\n              ? IMAGE_BASE_URL + profile_path\n              : 'https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_640.png';\n\n            return (\n              <Item key={id}>\n                <img src={imgUrl} alt={name} />\n                <h2>{name}</h2>\n                <p>\n                  <span>Character:</span> {character}\n                </p>\n              </Item>\n            );\n          })}\n        </StyledCast>\n      ) : (\n        <b>We don't have any cast for this movie :(</b>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Cast;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst API_KEY = '9e68854d69dbd1100bcb425bc2f51530';\n\nconst RESOURCE = {\n  trending: '/trending/movie/week',\n  search: '/search/movie',\n  movieDetails: '/movie/',\n};\n\nexport { BASE_URL, IMAGE_BASE_URL, API_KEY, RESOURCE };\n","import axios from 'axios';\n\nimport { BASE_URL, API_KEY, RESOURCE } from 'constants/api';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrendingMovies = () => {\n  return axios.get(RESOURCE.trending).then(res => res.data.results);\n};\n\nexport const getMoviesBySearchQuery = searchQuery => {\n  const options = {\n    params: {\n      query: searchQuery,\n    },\n  };\n\n  return axios.get(RESOURCE.search, options).then(res => res.data.results);\n};\n\nexport const getMovieDetails = id => {\n  return axios.get(RESOURCE.movieDetails + id).then(res => res.data);\n};\n\nexport const getMovieCredits = id => {\n  return axios\n    .get(RESOURCE.movieDetails + id + '/credits')\n    .then(res => res.data.cast);\n};\n\nexport const getMovieReviews = id => {\n  return axios\n    .get(RESOURCE.movieDetails + id + '/reviews')\n    .then(res => res.data.results);\n};\n"],"names":["Wrapper","styled","StyledCast","Item","useState","cast","setCast","movieId","useParams","useEffect","getMovieCredits","then","res","catch","err","console","log","length","map","id","name","character","profile_path","imgUrl","IMAGE_BASE_URL","src","alt","BASE_URL","API_KEY","RESOURCE","trending","search","movieDetails","axios","api_key","getTrendingMovies","data","results","getMoviesBySearchQuery","searchQuery","options","params","query","getMovieDetails","getMovieReviews"],"sourceRoot":""}
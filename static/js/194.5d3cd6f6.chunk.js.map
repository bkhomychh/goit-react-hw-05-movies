{"version":3,"file":"static/js/194.5d3cd6f6.chunk.js","mappings":"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","sources":["constants/api.js","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst API_KEY = '9e68854d69dbd1100bcb425bc2f51530';\n\nconst RESOURCE = {\n  trending: '/trending/movie/week',\n  search: '/search/movie',\n  movieDetails: '/movie/',\n};\n\nexport { BASE_URL, IMAGE_BASE_URL, API_KEY, RESOURCE };\n","import styled from 'styled-components';\n\nexport const MainInfo = styled.div`\n  margin-bottom: 30px;\n  display: flex;\n\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.5);\n`;\n\nexport const StyledImg = styled.img`\n  object-fit: contain;\n  object-position: top;\n  width: 20%;\n`;\n\nexport const Wrapper = styled.div`\n  padding: 30px 50px;\n\n  font-size: 18px;\n\n  h1 {\n    margin-bottom: 15px;\n  }\n\n  h2 {\n    margin-bottom: 10px;\n  }\n\n  p:not(:last-of-type) {\n    margin-bottom: 25px;\n  }\n`;\n\nexport const AdditionalInfo = styled.div`\n  padding: 30px 50px;\n  margin-bottom: 30px;\n\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.5);\n\n  h2 {\n    margin-bottom: 20px;\n  }\n\n  ul {\n    font-size: 18px;\n    font-weight: 500;\n    list-style: disc;\n  }\n\n  li:not(:last-child) {\n    margin-bottom: 10px;\n  }\n\n  a:hover {\n    color: crimson;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Suspense } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\n\nimport { IMAGE_BASE_URL } from 'constants/api';\nimport {\n  AdditionalInfo,\n  MainInfo,\n  StyledImg,\n  Wrapper,\n} from './MovieInfo.styled';\n\nconst MovieInfo = ({ movie, children }) => {\n  const { title, overview, genres = [], poster_path, vote_average } = movie;\n  const location = useLocation();\n\n  const imgUrl = IMAGE_BASE_URL + poster_path;\n  const score = Math.floor(vote_average * 10);\n\n  return (\n    <>\n      <MainInfo>\n        <StyledImg src={imgUrl} alt={title} />\n        <Wrapper>\n          <h1>{title}</h1>\n          <p>User score: {score}%</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <p>{genres.map(genre => genre.name).join(', ')}</p>\n        </Wrapper>\n      </MainInfo>\n      <AdditionalInfo>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <NavLink to=\"cast\" state={{ from: location }}>\n              Cast\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"reviews\" state={{ from: location }}>\n              Reviews\n            </NavLink>\n          </li>\n        </ul>\n      </AdditionalInfo>\n      <Suspense fallback={<p>Loading ...</p>}>{children}</Suspense>\n    </>\n  );\n};\n\nexport default MovieInfo;\n\nMovieInfo.propTypes = {\n  movie: PropTypes.object.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.element),\n    PropTypes.element,\n  ]).isRequired,\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: inline-block;\n  \n  padding: 5px 15px;\n  margin-bottom: 10px;\n\n  font-size: 18px;\n  font-weight: 700;\n  text-transform: uppercase;\n\n  border: 2px solid currentColor;\n  border-radius: 10px;\n  background-color: transparent;\n\n  &:hover {\n    color: crimson;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { StyledLink } from './BackLink.styled';\n\nconst BackLink = ({ to, children }) => {\n  return <StyledLink to={to}>{children}</StyledLink>;\n};\n\nexport default BackLink;\n\nBackLink.propTypes = {\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { useLocation, useParams, Outlet } from 'react-router-dom';\n\nimport { getMovieDetails } from 'services/api';\n\nimport MovieInfo from 'components/MovieInfo';\nimport BackLink from 'components/BackLink';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    getMovieDetails(movieId)\n      .then(res => setMovie(res))\n      .catch(err => console.log(err));\n  }, [movieId]);\n\n  return (\n    <>\n      <BackLink to={backLinkHref}>Go back</BackLink>\n      <MovieInfo movie={movie}>\n        <Outlet />\n      </MovieInfo>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nimport { BASE_URL, API_KEY, RESOURCE } from 'constants/api';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrendingMovies = () => {\n  return axios.get(RESOURCE.trending).then(res => res.data.results);\n};\n\nexport const getMoviesBySearchQuery = searchQuery => {\n  const options = {\n    params: {\n      query: searchQuery,\n    },\n  };\n\n  return axios.get(RESOURCE.search, options).then(res => res.data.results);\n};\n\nexport const getMovieDetails = id => {\n  return axios.get(RESOURCE.movieDetails + id).then(res => res.data);\n};\n\nexport const getMovieCredits = id => {\n  return axios\n    .get(RESOURCE.movieDetails + id + '/credits')\n    .then(res => res.data.cast);\n};\n\nexport const getMovieReviews = id => {\n  return axios\n    .get(RESOURCE.movieDetails + id + '/reviews')\n    .then(res => res.data.results);\n};\n"],"names":["BASE_URL","IMAGE_BASE_URL","API_KEY","RESOURCE","trending","search","movieDetails","MainInfo","styled","StyledImg","Wrapper","AdditionalInfo","movie","children","title","overview","genres","poster_path","vote_average","location","useLocation","imgUrl","score","Math","floor","src","alt","map","genre","name","join","to","state","from","Suspense","fallback","StyledLink","Link","useState","setMovie","movieId","useParams","backLinkHref","useEffect","getMovieDetails","then","res","catch","err","console","log","axios","api_key","getTrendingMovies","data","results","getMoviesBySearchQuery","searchQuery","options","params","query","id","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}
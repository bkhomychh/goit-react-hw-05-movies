{"version":3,"file":"static/js/415.ad4cb1e6.chunk.js","mappings":"sMAEaA,E,OAAaC,GAAAA,GAAH,oT,SC2BvB,EAxBkB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,8BACGF,EAAOG,OAAS,IACf,SAACL,EAAD,UACGE,EAAOI,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMR,GAAhD,SACGI,EAAMK,SAFFL,EAAME,GADA,OAW1B,C,+HCvBD,IAAMI,EAAW,+BACXC,EAAiB,kCAEjBC,EAAU,mCAEVC,EAAW,CACfC,SAAU,uBACVC,OAAQ,gBACRC,aAAc,U,8ECehB,UAjBa,WACX,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOlB,EAAP,KAAemB,EAAf,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACGC,MAAK,SAAAtB,GAAM,OAAImB,EAAUnB,EAAd,IACXuB,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,QAAtB,GACf,GAAE,KAGD,iCACE,2CACC3B,EAAOG,OAAS,IAAK,SAAC,IAAD,CAAWH,OAAQA,MAG9C,C,6KCjBD4B,EAAAA,EAAAA,SAAAA,QAAyBjB,EAAAA,GACzBiB,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAShB,EAAAA,IAGJ,IAAMQ,EAAoB,WAC/B,OAAOO,EAAAA,EAAAA,IAAUd,EAAAA,GAAAA,UAAmBQ,MAAK,SAAAQ,GAAG,OAAIA,EAAIC,KAAKC,OAAb,GAC7C,EAEYC,EAAyB,SAAAC,GACpC,IAAMC,EAAU,CACdC,OAAQ,CACNC,MAAOH,IAIX,OAAON,EAAAA,EAAAA,IAAUd,EAAAA,GAAAA,OAAiBqB,GAASb,MAAK,SAAAQ,GAAG,OAAIA,EAAIC,KAAKC,OAAb,GACpD,EAEYM,EAAkB,SAAA/B,GAC7B,OAAOqB,EAAAA,EAAAA,IAAUd,EAAAA,GAAAA,aAAwBP,GAAIe,MAAK,SAAAQ,GAAG,OAAIA,EAAIC,IAAR,GACtD,EAEYQ,EAAkB,SAAAhC,GAC7B,OAAOqB,EAAAA,EAAAA,IACAd,EAAAA,GAAAA,aAAwBP,EAAK,YACjCe,MAAK,SAAAQ,GAAG,OAAIA,EAAIC,KAAKS,IAAb,GACZ,EAEYC,EAAkB,SAAAlC,GAC7B,OAAOqB,EAAAA,EAAAA,IACAd,EAAAA,GAAAA,aAAwBP,EAAK,YACjCe,MAAK,SAAAQ,GAAG,OAAIA,EAAIC,KAAKC,OAAb,GACZ,C","sources":["components/MovieList/MovieList.styled..js","components/MovieList/MovieList.jsx","constants/api.js","pages/Home.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  margin-top: 20px;\n  padding: 30px 50px;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n\n  color: rgb(50, 50, 50);\n  font-weight: 500;\n  font-size: 20px;\n\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.5);\n\n  list-style: disc;\n\n  a:hover {\n    color: crimson;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport { StyledList } from './MovieList.styled.';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      {movies.length > 0 && (\n        <StyledList>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </StyledList>\n      )}\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default MovieList;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst API_KEY = '9e68854d69dbd1100bcb425bc2f51530';\n\nconst RESOURCE = {\n  trending: '/trending/movie/week',\n  search: '/search/movie',\n  movieDetails: '/movie/',\n};\n\nexport { BASE_URL, IMAGE_BASE_URL, API_KEY, RESOURCE };\n","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { getTrendingMovies } from 'services/api';\n\nimport MovieList from 'components/MovieList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    getTrendingMovies()\n      .then(movies => setMovies(movies))\n      .catch(error => console.log(error.message));\n  }, []);\n\n  return (\n    <>\n      <h1>Trending today</h1>\n      {movies.length > 0 && <MovieList movies={movies} />}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nimport { BASE_URL, API_KEY, RESOURCE } from 'constants/api';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrendingMovies = () => {\n  return axios.get(RESOURCE.trending).then(res => res.data.results);\n};\n\nexport const getMoviesBySearchQuery = searchQuery => {\n  const options = {\n    params: {\n      query: searchQuery,\n    },\n  };\n\n  return axios.get(RESOURCE.search, options).then(res => res.data.results);\n};\n\nexport const getMovieDetails = id => {\n  return axios.get(RESOURCE.movieDetails + id).then(res => res.data);\n};\n\nexport const getMovieCredits = id => {\n  return axios\n    .get(RESOURCE.movieDetails + id + '/credits')\n    .then(res => res.data.cast);\n};\n\nexport const getMovieReviews = id => {\n  return axios\n    .get(RESOURCE.movieDetails + id + '/reviews')\n    .then(res => res.data.results);\n};\n"],"names":["StyledList","styled","movies","location","useLocation","length","map","movie","to","id","state","from","title","BASE_URL","IMAGE_BASE_URL","API_KEY","RESOURCE","trending","search","movieDetails","useState","setMovies","useEffect","getTrendingMovies","then","catch","error","console","log","message","axios","api_key","res","data","results","getMoviesBySearchQuery","searchQuery","options","params","query","getMovieDetails","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}